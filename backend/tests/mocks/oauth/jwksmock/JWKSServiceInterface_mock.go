// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package jwksmock

import (
	"github.com/asgardeo/thunder/internal/oauth/jwks/model"
	"github.com/asgardeo/thunder/internal/system/error/serviceerror"
	mock "github.com/stretchr/testify/mock"
)

// NewJWKSServiceInterfaceMock creates a new instance of JWKSServiceInterfaceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJWKSServiceInterfaceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *JWKSServiceInterfaceMock {
	mock := &JWKSServiceInterfaceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// JWKSServiceInterfaceMock is an autogenerated mock type for the JWKSServiceInterface type
type JWKSServiceInterfaceMock struct {
	mock.Mock
}

type JWKSServiceInterfaceMock_Expecter struct {
	mock *mock.Mock
}

func (_m *JWKSServiceInterfaceMock) EXPECT() *JWKSServiceInterfaceMock_Expecter {
	return &JWKSServiceInterfaceMock_Expecter{mock: &_m.Mock}
}

// GetJWKS provides a mock function for the type JWKSServiceInterfaceMock
func (_mock *JWKSServiceInterfaceMock) GetJWKS() (*model.JWKSResponse, *serviceerror.ServiceError) {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetJWKS")
	}

	var r0 *model.JWKSResponse
	var r1 *serviceerror.ServiceError
	if returnFunc, ok := ret.Get(0).(func() (*model.JWKSResponse, *serviceerror.ServiceError)); ok {
		return returnFunc()
	}
	if returnFunc, ok := ret.Get(0).(func() *model.JWKSResponse); ok {
		r0 = returnFunc()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.JWKSResponse)
		}
	}
	if returnFunc, ok := ret.Get(1).(func() *serviceerror.ServiceError); ok {
		r1 = returnFunc()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*serviceerror.ServiceError)
		}
	}
	return r0, r1
}

// JWKSServiceInterfaceMock_GetJWKS_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJWKS'
type JWKSServiceInterfaceMock_GetJWKS_Call struct {
	*mock.Call
}

// GetJWKS is a helper method to define mock.On call
func (_e *JWKSServiceInterfaceMock_Expecter) GetJWKS() *JWKSServiceInterfaceMock_GetJWKS_Call {
	return &JWKSServiceInterfaceMock_GetJWKS_Call{Call: _e.mock.On("GetJWKS")}
}

func (_c *JWKSServiceInterfaceMock_GetJWKS_Call) Run(run func()) *JWKSServiceInterfaceMock_GetJWKS_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *JWKSServiceInterfaceMock_GetJWKS_Call) Return(jWKSResponse *model.JWKSResponse, serviceError *serviceerror.ServiceError) *JWKSServiceInterfaceMock_GetJWKS_Call {
	_c.Call.Return(jWKSResponse, serviceError)
	return _c
}

func (_c *JWKSServiceInterfaceMock_GetJWKS_Call) RunAndReturn(run func() (*model.JWKSResponse, *serviceerror.ServiceError)) *JWKSServiceInterfaceMock_GetJWKS_Call {
	_c.Call.Return(run)
	return _c
}
